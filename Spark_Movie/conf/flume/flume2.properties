# Name the components on this agent
a1.sources = r1
a1.sinks = k1 k2
a1.channels = c1 c2

a1.sources.r1.selector.type = replicating

# Describe/configure the source
a1.sources.r1.type =exec
a1.sources.r1.command= tail -F /opt/movieLog/access.log

# Describe the sink
a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink  
a1.sinks.k1.topic = test1   
a1.sinks.k1.brokerList = 192.168.0.104:9092,192.168.0.105:9092,192.168.0.107:9092  
a1.sinks.k1.requiredAcks = 1  
a1.sinks.k1.batchSize = 1 
a1.sinks.k1.channel = c1 

# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000000
a1.channels.c1.transactionCapacity = 10000

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1

# Describe the sink
a1.sinks.k2.type=hdfs
a1.sinks.k2.hdfs.path=hdfs://spark1:9000/movie/data/info2/%Y-%m-%d
a1.sinks.k2.hdfs.rollCount=0
a1.sinks.k2.hdfs.rollInterval=60
a1.sinks.k2.hdfs.rollSize=10240
a1.sinks.k2.hdfs.idleTimeout=3
a1.sinks.k2.hdfs.fileType=DataStream
a1.sinks.k2.hdfs.useLocalTimeStamp=true
#a1.sinks.k2.hdfs.round=true
#a1.sinks.k2.hdfs.roundValue=2
#a1.sinks.k2.hdfs.roundUnit=minute

# Use a channel which buffers events in memory
a1.channels.c2.type = memory
a1.channels.c2.capacity = 1000
a1.channels.c2.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c2
a1.sinks.k2.channel = c2
